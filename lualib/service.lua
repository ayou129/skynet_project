---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liguoxin.
--- DateTime: 2023/10/28 23:47
---
local skynet = require("skynet")
local cluster = require("skynet.cluster")

local M = {
    -- 类型和id
    name = "",
    id = 0,

    -- 回调函数
    exit = nil,
    init = nil,

    -- 分发方法
    resp = {}
}

function traceback(err)
    skynet.error(tostring(err))
    skynet.error(debug.traceback())
end

local dispatch = function(session, source, cmd, ...)
    local fun = M.resp[cmd]
    if not fun then
        skynet.error("Unknown command : [" .. cmd .. "]")
        skynet.ret()
        return
    end

    local ret = table.pack(xpcall(fun, traceback, source, ...))
    print(ret)
    local ok = ret[1]

    if not ok then
        skynet.error(ret)
        skynet.ret()
        return
    end
    skynet.retpack(table.unpack(ret, 2))
end

function init()
    skynet.dispatch("lua", dispatch)
    if M.init then
        M.init()
    end
end


-- node 接收方的节点 srv 接收方的服务名
function M.call(node, srv, ...)
    -- 当前节点
    local mynode = skynet.getenv("node")
    if node == mynode then
        -- 相同节点
        return skynet.call(srv, "lua", ...)
    else
        -- 不同节点
        return cluster.call(node, srv, ...)
    end
end

-- node 接收方的节点 srv 接收方的服务名
function M.send(node, srv, ...)
    -- 当前节点
    local mynode = skynet.getenv("node")
    if node == mynode then
        -- 相同节点
        return skynet.send(srv, "lua", ...)
    else
        -- 不同节点
        return cluster.send(node, srv, ...)
    end
end

function M.start(name, id)
    M.name = name
    M.id = tonumber(id)
    skynet.start(init)
end

return M